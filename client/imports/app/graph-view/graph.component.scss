@import '../../../styles/colors';
@import '../../../styles/mixins';
@import '../../../styles/layout-variables';

.graph-container {
  height: 100%;
  width: 100%;
  background-color: #212121;
}

.graph {
  .node {
    cursor: pointer;

    circle {
      &.outer {
        display: none;
      }

      &.inner {
        fill: #ffffff;
        stroke: #777777;
        stroke-width: 4px;
      }
    }

    &__content {
       &__title {
        font-size: 13px;
        font-weight: 700;
      }

      &__text {
        font-size: 11px;
        overflow: hidden;
      }
    }

    .focus-button {
      rect, text, use {
        @include transition($properties: (fill, stroke));
      }

      rect {
        fill: $white;
        stroke: #000;
        stroke-width: 2px;
      }

      &__label {
        font-size: 20px;
      }

      &:hover {
        cursor: pointer;
        
        rect {
          stroke: $accent-color;
          fill: $accent-color;
        }

        text, use {
          fill: $white;
        }
      }
    }

    &--selected {
      cursor: default;

      circle.outer {
        display: block;
        stroke: $accent-color;
        stroke-width: 4px;
        stroke-dasharray: 13px;
        fill: transparent;
      }

      circle.new-edge__start {
        fill: $primary-text-color;
        stroke: $white;
        stroke-width: 4px;

        &:hover {
          cursor: pointer;
        }
      }
      
      path.new-edge__hover-area {
        fill: transparent;
      }
    }

    &--hover {
      circle.inner {
        stroke: $accent-color;
        stroke-width: 8px;
      }
    }

    &--new {
      circle.inner {
        stroke: $primary-color-secondary-text;
        stroke-width: 4px;
        stroke-dasharray: 13px;
        fill: transparent;
      }

      use {
        fill: $primary-color-secondary-text;
      }

      &:hover {
        circle.inner {
          stroke: $primary-color-text;
        }

        use {
          fill: $primary-color-text;
        }
      }
    }
  }
  
  .edge {
    stroke-width: 6px;
    stroke: rgba(255, 255, 255, 0.2);

    &--highlighted {
      stroke-width: 9px;
      stroke: $accent-color;
    }

    &-button {
      circle, use {
        @include transition($properties: (fill, stroke));
      }

      circle {
        stroke-width: 6px;
        stroke: $accent-color;
        fill: $white;
      }

    &:hover {
      cursor: pointer;

      circle {
        fill: $accent-color;
      }

      use {
        fill: $white;
      }
    }
    }
  }

}

minimap {
  position: absolute;
  top: calc(1vw + 1vh);
  right: calc(1vw + 1vh);
  z-index: 999;
}

.buttons {
  position: absolute;
  bottom: 0;
  right: 0;
  display: flex;
  flex-direction: column;

  button, svg, use {
    @include transition($properties: (background-color, fill, stroke));
  }

  &__button--circular {
    margin-right: calc(1vw + 1vh);
    margin-bottom: calc(1vw + 1vh);
    padding: 0.25rem;
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    border: none;
    background-color: $background;
    color: $primary-text-color;
    box-shadow: 0 4px 10px 0 rgba(0,0,0,0.24);

    svg {
      width: 2.5rem;
      height: 2.5rem;

      use {
        fill: currentColor;
      }
    }

    &:hover {
      background-color: $white;
      color: $primary-color;
    }

    &:active, &:focus {
      outline: none;
    }
  }
}

/* unused */
.is-grabbing {
  cursor: -webkit-grabbing;
  cursor: grabbing;
}